# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo apt install -y libpq-dev
      - run: sudo docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql
      - run: sudo docker-php-ext-install pdo pdo_pgsql pgsql
      - run: sudo composer self-update

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist --dev

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.lock" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "yarn.lock" }}
            - node-v1-
      - run: yarn install
      - save_cache:
          key: node-v1-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: cp assets/js/template.params.json assets/js/params.json && yarn dev

      # running tests
      - run: php -d memory_limit=512M vendor/bin/phpunit --configuration .circleci/phpunit.xml tests/Functional
      
      - run:
          name: Creating Zip from builded project
          command: |
            zip -r /tmp/rapportNav.zip assets/ bin/ config/ node_modules/ public/ src/ templates/ tests/ translations/ vendor/ .env composer.json composer.lock LICENSE package.json README.md symfony.lock webpack.config.js
      
      - store_artifacts:
          path: /tmp/rapportNav.zip
          
